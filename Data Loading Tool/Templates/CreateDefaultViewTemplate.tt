<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".sql" #>

CREATE VIEW [dbo].[<#= FactName #>]
AS
select 
<#
	Boolean firstSelect = true;
	foreach(String dimensionName in DimensionNames)
	{
		if(firstSelect)
		{
#>
			  [<#= dimensionName #>].GeographyName
			 ,[<#= dimensionName #>].GeographyType
			 ,[<#= dimensionName #>].LoadReference
			<#
				if(AggregateQuery)
				{
			#>
			, sum([<#= dimensionName #>].FactCount) as FactCount
			
			<#
				}
				else
				{
			#>
			, [<#= dimensionName #>].FactCount
			<#
				}
			#>
			, [<#= dimensionName #>].DimensionValue as [<#= dimensionName #>]
<#
			firstSelect = false;
		}
		else
		{
#>
			, [<#= dimensionName #>].DimensionValue as [<#= dimensionName #>]
<#
		}
	}
#>
from
<#
	Boolean firstPass = true;
	String firstDimension = "";
	foreach(String dimensionName in DimensionNames)
	{
		if(firstPass)
		{
#>
			(
				SELECT        
					I.FactInstanceID,
					case L.GeographyTypeID
						when 1 then CONVERT (VARCHAR(50), L.UPRN,128)
						when 2 then L.Postcode
						when 3 then L.LsoaName
						when 4 then L.WardName
						when 5 then L.MsoaName
					end as GeographyName,
					G.GeographyType,	 
					V.DimensionValue , 
					I.LoadReference,
					I.Value AS FactCount
				FROM            
					dbo.FactInstance AS I 
				INNER JOIN
					dbo.Geography AS L 
				ON 
					L.GeographyID = I.GeographyID 
				INNER JOIN 
					dbo.GeographyType G
				on 
					L.GeographyTypeID = G.GeographyTypeID
				INNER JOIN
					dbo.FactDimensionSet AS S 
				ON 
					I.FactDimensionSetID = S.FactDimensionSetID 
				INNER JOIN
					dbo.Fact AS F 
				ON 
					F.FactID = S.FactID 
				INNER JOIN
					dbo.FactDimensionMapping AS M 
				ON 
					S.FactDimensionSetID = M.FactDimensionSetID 
				INNER JOIN
					dbo.DimensionValue AS V 
				ON 
					V.DimensionValueID = M.DimensionValueID 
				INNER JOIN
					dbo.Dimension AS D 
				ON 
					D.DimensionID = V.DimensionID
				WHERE        
					(D.DimensionName = '<#= dimensionName #>') AND (F.FactName = '<#= FactName #>')
			) [<#= dimensionName #>]	
<#
			firstPass = false;
			firstDimension = dimensionName;
		}
		else
		{
#>
			inner join
			(
				SELECT        
					I.FactInstanceID,
					case L.GeographyTypeID
						when 1 then CONVERT (VARCHAR(50), L.UPRN,128)
						when 2 then L.Postcode
						when 3 then L.LsoaName
						when 4 then L.WardName
						when 5 then L.MsoaName
					end as GeographyName,
					G.GeographyType,
					V.DimensionValue, 
					I.LoadReference,
					I.Value AS FactCount
				FROM            
					dbo.FactInstance AS I 
				INNER JOIN
					dbo.Geography AS L 
				ON 
					L.GeographyID = I.GeographyID
				INNER JOIN 
					dbo.GeographyType G
				on 
					L.GeographyTypeID = G.GeographyTypeID
				INNER JOIN
					dbo.FactDimensionSet AS S 
				ON 
					I.FactDimensionSetID = S.FactDimensionSetID 
				INNER JOIN
					dbo.Fact AS F 
				ON 
					F.FactID = S.FactID 
				INNER JOIN
					dbo.FactDimensionMapping AS M 
				ON 
					S.FactDimensionSetID = M.FactDimensionSetID 
				INNER JOIN
					dbo.DimensionValue AS V 
				ON 
					V.DimensionValueID = M.DimensionValueID 
				INNER JOIN
					dbo.Dimension AS D 
				ON 
					D.DimensionID = V.DimensionID
				WHERE        
					(D.DimensionName = '<#= dimensionName #>') AND (F.FactName = '<#= FactName #>')
			) [<#= dimensionName #>]	
			on [<#= firstDimension#>].FactInstanceID = [<#= dimensionName #>].FactInstanceID
<#
		}
	}
#>
<#
	if(AggregateQuery)
	{	
	Boolean firstAggregate = true;
#>
	group by
<#
	foreach(String dimensionName in DimensionNames)
	{
		if(firstAggregate)
		{
#>
		[<#= dimensionName #>].GeographyName
		,[<#= dimensionName #>].GeographyType
		,[<#= dimensionName #>].DimensionValue
		,[<#= dimensionName #>].LoadReference
<#
			firstAggregate = false;
		}
		else
		{
#>
		,[<#= dimensionName #>].DimensionValue
<#
		}
	}
	}
#>